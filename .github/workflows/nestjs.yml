name: web-back CI

on:
  push:
    branches:
      - web-back
  pull_request:
    branches:
      - web-back

jobs:
  build:
    runs-on: ubuntu-latest
    env:
        DB_HOST: ${{ vars.DB_HOST }}
        DB_PORT: ${{ vars.DB_PORT }}
        DB_USERNAME: ${{ vars.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        DB_DATABASE: ${{ vars.DB_DATABASE }}
        DB_SYNCHRONIZE: ${{ vars.DB_SYNCHRONIZE }}
        REDIS_PORT: ${{ vars.REDIS_PORT }}
        REDIS_HOST: ${{ vars.REDIS_HOST }}
        REDIS_DB_1: ${{ vars.REDIS_DB_1 }}
        REDIS_DB_0: ${{ vars.REDIS_DB_0 }}
        SMTP_HOST: ${{ vars.SMTP_HOST }}
        SMTP_PORT: ${{ vars.SMTP_PORT }}
        SMTP_USER: ${{ vars.SMTP_USER }}
        SMTP_PASS: ${{ secrets.SMTP_PASS }}
        HTTP_TIMEOUT: ${{ vars.HTTP_TIMEOUT }}
        HTTP_MAX_REDIRECTS: ${{ vars.HTTP_MAX_REDIRECTS }}
        JWT_SECRET: ${{ secrets.JWT_SECRET }}
        CLIENT_ORIGIN: ${{ vars.CLIENT_ORIGIN }}
        RECAPTCHA_SECRET: ${{ secrets.RECAPTCHA_SECRET }}
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: 123456
          MYSQL_DATABASE: ${{ vars.DB_DATABASE }}
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

      redis:
        image: redis:latest
        ports:
          - 6379:6379
        options: >-
          --health-cmd="redis-cli ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install
        working-directory: web/back/

      - name: Install Redis CLI
        run: sudo apt-get update && sudo apt-get install -y redis-tools

      - name: Wait for MySQL to be ready
        run: |
          until mysqladmin ping -h 127.0.0.1 -u root -p${{ secrets.DB_PASSWORD }} --silent; do
            echo 'Waiting for MySQL...'
            sleep 5
          done

      - name: Wait for Redis to be ready
        run: |
          until redis-cli -h localhost -p 6379 ping; do
            echo 'Waiting for Redis...'
            sleep 5
          done

      - name: Create .env.development file
        run: |
          echo DB_HOST=${{ vars.DB_HOST }} >> web/back/.env.development
          echo DB_PORT=${{ vars.DB_PORT }} >> web/back/.env.development
          echo DB_USERNAME=${{ vars.DB_USERNAME }} >> web/back/.env.development
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> web/back/.env.development
          echo DB_DATABASE=${{ vars.DB_DATABASE }} >> web/back/.env.development
          echo REDIS_PORT=${{ vars.REDIS_PORT }} >> web/back/.env.development
          echo REDIS_HOST=${{ vars.REDIS_HOST }} >> web/back/.env.development
          echo REDIS_DB_1=${{ vars.REDIS_DB_1 }} >> web/back/.env.development
          echo REDIS_DB_0=${{ vars.REDIS_DB_0 }} >> web/back/.env.development
          echo SMTP_HOST=${{ vars.SMTP_HOST }} >> web/back/.env.development
          echo SMTP_PORT=${{ vars.SMTP_PORT }} >> web/back/.env.development
          echo SMTP_USER=${{ vars.SMTP_USER }} >> web/back/.env.development
          echo SMTP_PASS=${{ secrets.SMTP_PASS }} >> web/back/.env.development
          echo HTTP_TIMEOUT=${{ vars.HTTP_TIMEOUT  }} >> web/back/.env.development
          echo HTTP_MAX_REDIRECTS=${{ vars.HTTP_MAX_REDIRECTS }} >> web/back/.env.development
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> web/back/.env.development
          echo CLIENT_ORIGIN=${{ vars.CLIENT_ORIGIN }} >> web/back/.env.development
          echo RECAPTCHA_SECRET=${{ secrets.RECAPTCHA_SECRET }} >> web/back/.env.development
      
      - name: Build project
        run: npm run build
        working-directory: web/back/
